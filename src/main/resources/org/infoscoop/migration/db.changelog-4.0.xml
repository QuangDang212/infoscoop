<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
    xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
    http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">

	<property name="clob.type" value="clob" dbms="oracle, db2"/>
    <property name="clob.type" value="text" dbms="mysql"/>

    <!--Issue 539-->
    <!--CREATE TABLE `IS_OAUTHPROVIDER_ACCESSTOKENS` (id VARCHAR(255), token BLOB, authentication_id VARCHAR(255), user_id VARCHAR(150), client_id VARCHAR(255), authentication BLOB, refresh_token VARCHAR(255), PRIMARY KEY (id));-->
    <!--CREATE TABLE `IS_OAUTHPROVIDER_REFRESHTOKENS` (id VARCHAR(255), token BLOB, authentication BLOB, PRIMARY KEY (id));-->
    <changeSet id="infoscoop400_539_1" author="mikami">
        <preConditions onFail="MARK_RAN" onFailMessage="skip infoscoop400_539_1">
            <not>
                <tableExists schemaName="${migration.defaultSchema}" tableName="IS_OAUTHPROVIDER_ACCESSTOKENS"/>
                <tableExists schemaName="${migration.defaultSchema}" tableName="IS_OAUTHPROVIDER_REFRESHTOKENS"/>
            </not>
        </preConditions>
        <createTable tableName="IS_OAUTHPROVIDER_ACCESSTOKENS" tablespace="${.tablespace}">
            <column name="id" type="varchar(255)">
                <constraints primaryKey="true"/>
            </column>
            <column name="token" type="blob"/>
            <column name="authentication_id" type="varchar(255)"/>
            <column name="user_id" type="varchar(255)"/>
            <column name="client_id" type="varchar(255)"/>
            <column name="authentication" type="blob"/>
            <column name="refresh_token" type="varchar(255)"/>
        </createTable>
        <createTable tableName="IS_OAUTHPROVIDER_REFRESHTOKENS" tablespace="${.tablespace}">
            <column name="id" type="varchar(255)">
                <constraints primaryKey="true"/>
            </column>
            <column name="token" type="blob"/>
            <column name="authentication" type="blob"/>
        </createTable>
    </changeSet>
    
    <!--Issue 539-->
    <!--CREATE TABLE `IS_OAUTHPROVIDER_CLIENT` (id VARCHAR(255), title VARCHAR(255) NOT NULL, resource_ids VARCHAR(255), secret VARCHAR(255) NOT NULL, scope VARCHAR(255), grant_types VARCHAR(255), redirect_url VARCHAR(255), authorities VARCHAR(255), access_token_validity INTEGER, refresh_token_validity INTEGER, additional_information CLOB, PRIMARY KEY (id));-->
    <changeSet id="infoscoop400_539_2" author="mikami">
        <preConditions onFail="MARK_RAN" onFailMessage="skip infoscoop400_539_2">
            <not>
                <tableExists schemaName="${migration.defaultSchema}" tableName="IS_OAUTHPROVIDER_CLIENT"/>
            </not>
        </preConditions>
        <createTable tableName="IS_OAUTHPROVIDER_CLIENT" tablespace="${.tablespace}">
            <column name="id" type="varchar(255)">
                <constraints primaryKey="true"/>
            </column>
            <column name="title" type="varchar(255)">
	            <constraints nullable="false"/>
            </column>
            <column name="resource_ids" type="varchar(255)"/>
            <column name="secret" type="varchar(255)">
    	        <constraints nullable="false"/>
            </column>
            <column name="scope" type="varchar(255)"/>
            <column name="grant_types" type="varchar(255)"/>
            <column name="redirect_url" type="varchar(255)"/>
            <column name="authorities" type="varchar(255)"/>
            <column name="access_token_validity" type="integer"/>
            <column name="refresh_token_validity" type="integer"/>
            <column name="additional_information" type="${clob.type}"/>
        </createTable>
    </changeSet>
    
    <!--Issue 541-->
    <!--INSERT INTO `IS_I18N` VALUES ("adminjs","alb_portalHeader","ALL","ALL","Header");-->
    <!--INSERT INTO `IS_I18N` VALUES ("adminjs","alb_portalHeader","ALL","ja","ヘッダ");-->
    <!--INSERT INTO `IS_I18N` VALUES ("adminjs","alb_portalHeader","ALL","zh","头");-->
    <changeSet id="infoscoop400_541_1" author="nishiumi">
        <preConditions onFail="MARK_RAN" onFailMessage="skip infoscoop400_541_1">
            <sqlCheck expectedResult="0">select count(*) from ${migration.defaultSchemaWithDot}IS_I18N where id='alb_portalHeader';</sqlCheck>
        </preConditions>
        <insert tableName="IS_I18N">
            <column name="type" value="adminjs"/>
            <column name="id" value="alb_portalHeader"/>
            <column name="country" value="ALL"/>
            <column name="lang" value="ALL"/>
            <column name="message" value="Header"/>
        </insert>
        <insert tableName="IS_I18N">
            <column name="type" value="adminjs"/>
            <column name="id" value="alb_portalHeader"/>
            <column name="country" value="ALL"/>
            <column name="lang" value="ja"/>
            <column name="message" value="ヘッダ"/>
        </insert>
        <insert tableName="IS_I18N">
            <column name="type" value="adminjs"/>
            <column name="id" value="alb_portalHeader"/>
            <column name="country" value="ALL"/>
            <column name="lang" value="zh"/>
            <column name="message" value="头"/>
        </insert>
    </changeSet>

    <!--Issue 541-->
    <!--INSERT INTO IS_STATIC_TABS VALUES('header', NULL, NULL, 0, 0)-->
    <!--DELETE FROM IS_TABLAYOUTS WHERE temp = 1;-->
    <changeSet id="infoscoop400_541_2" author="nishiumi">
        <preConditions onFail="MARK_RAN" onFailMessage="skip infoscoop400_541_2">
            <sqlCheck expectedResult="0">select count(*) from ${migration.defaultSchemaWithDot}IS_STATIC_TABS where TABID='header';</sqlCheck>
            <sqlCheck expectedResult="0">select count(*) from ${migration.defaultSchemaWithDot}IS_TABLAYOUTS where TABID='header';</sqlCheck>
        </preConditions>
        <insert tableName="IS_STATIC_TABS">
            <column name="TABID" value="header"/>
            <column name="DELETEFLAG" value="0"/>
            <column name="DISABLEDEFAULT" value="0"/>
        </insert>
        <sql><![CDATA[
insert into ${migration.defaultSchemaWithDot}is_tablayouts
(TABID, ROLEORDER, ROLE, ROLENAME, PRINCIPALTYPE, DEFAULTUID, WIDGETS, LAYOUT, WIDGETSLASTMODIFIED, TEMP, WORKINGUID)
values('header', 0, 'default', 'defaultRole', 'OrganizationPrincipal', 'default', '<widgets/>', 
(select layout from ${migration.defaultSchemaWithDot}is_portallayouts where name='header')
,'0', 0, '')
        ]]></sql>
        <delete tableName="IS_PORTALLAYOUTS">
            <where>NAME='header'</where>
        </delete>
    </changeSet>

</databaseChangeLog>
